{"ast":null,"code":"var _jsxFileName = \"E:\\\\Rails\\\\RailsOJT\\\\outline-create-too-mdy_nodocker\\\\app\\\\javascript\\\\components\\\\employees\\\\_employee_form.jsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport React, { useState } from \"react\";\nimport I18n, { placeholder } from \"i18n-js\";\nimport moment from \"moment\";\nimport { Form, Input, InputNumber, Button, Select, DatePicker, Modal, Radio, Table, Upload, message } from \"antd\";\nimport { string } from \"prop-types\";\nvar Search = Input.Search;\n\nvar EmployeeForm = function EmployeeForm(_ref) {\n  var onFinish = _ref.onFinish,\n      role = _ref.role,\n      formRef = _ref.formRef,\n      validateMessages = _ref.validateMessages,\n      group = _ref.group,\n      hanldeClear = _ref.hanldeClear,\n      onFileUpload = _ref.onFileUpload;\n  var layout = {\n    labelCol: {\n      span: 5\n    },\n    wrapperCol: {\n      span: 13\n    }\n  }; // let formErrors = {};\n  // cname = (name) => {\n  //   //console.log(name);\n  //   formErrors = {};\n  //   if (!/^[a-zA-Z]+$/.test(name)) {\n  //     formErrors = \"Name is invalid.\";\n  //     //console.log(\"false\");\n  //   }\n  //   console.log(formErrors);\n  // };\n  //console.log(formErrors);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isModalVisible = _useState4[0],\n      setIsModalVisible = _useState4[1]; // 表示するテーブル列を設定する;\n\n\n  var columns = [{\n    dataIndex: \"group_name\",\n    key: \"id\",\n    render: function render(dataIndex, record) {\n      return /*#__PURE__*/React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _onClick(record.id, record.group_name);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, dataIndex);\n    }\n  }];\n\n  var normFile = function normFile(e) {\n    // console.log(\"Upload event:\", e);\n    console.log(\"Name : \" + e.target.name);\n    return e && e.file;\n  };\n\n  var _onClick = function _onClick(value, gname) {\n    var _formRef$current;\n\n    (_formRef$current = formRef.current) === null || _formRef$current === void 0 ? void 0 : _formRef$current.setFieldsValue({\n      group_id: value,\n      group_name: gname\n    }); // ModalBoxを閉める\n\n    setIsModalVisible(false);\n  }; // ModalBoxを呼ぶ\n\n\n  var showModal = function showModal(svalue) {\n    setSearchTerm(svalue); // ModalBoxを表示する\n\n    setIsModalVisible(true);\n  }; // Cancelボタンを押すとModalBoxを閉める\n\n\n  var handleCancel = function handleCancel() {\n    setIsModalVisible(false);\n  }; // 将来の日を選択できないように\n\n\n  var disabledDate = function disabledDate(current) {\n    return current > moment().endOf(\"day\");\n  }; // const { studNameErr } = formErrors;\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, Object.assign({\n    style: {\n      width: \"60%\",\n      marginLeft: \"200px\"\n    },\n    autoComplete: \"off\",\n    onFinish: onFinish,\n    ref: formRef\n  }, layout, {\n    name: \"nest-messages\",\n    validateMessages: validateMessages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n      offset: 9\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"#0050b3\",\n      fontSize: \"30px\",\n      fontStyle: \"italic\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"\\u793E\\u54E1\\u60C5\\u5831\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"name\",\n    label: I18n.t(\"employee.form.columns.name\"),\n    rules: [{\n      type: \"string\",\n      required: true\n    }, {\n      whitespace: true\n    }, {\n      max: 10,\n      message: I18n.t(\"message.M002\")\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    allowClear: true // onChange={(event) => {\n    //   cname(event.target.value);\n    // }}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    label: I18n.t(\"employee.form.columns.email\"),\n    rules: [{\n      type: \"email\",\n      required: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"age\",\n    label: I18n.t(\"employee.form.columns.age\"),\n    rules: [{\n      type: \"number\",\n      min: 0,\n      max: 99,\n      required: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputNumber, {\n    style: {\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"address\",\n    label: I18n.t(\"employee.form.columns.address\"),\n    rules: [{\n      required: true\n    }, {\n      whitespace: true\n    }, {\n      max: 100\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input.TextArea, {\n    style: {\n      resize: \"none\"\n    },\n    showCount: true,\n    maxLength: 100,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"birthday\",\n    label: I18n.t(\"employee.form.columns.birthday\"),\n    rules: [{\n      required: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DatePicker, {\n    disabledDate: disabledDate,\n    placeholder: \"\\u65E5\\u4ED8\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n    style: {\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"role_id\",\n    label: I18n.t(\"employee.form.columns.role\"),\n    rules: [{\n      required: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    placeholder: \"\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, role.map(function (value) {\n    return /*#__PURE__*/React.createElement(Select.Option, {\n      value: value.key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 15\n      }\n    }, value.role_name);\n  }))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"group_name\",\n    label: I18n.t(\"employee.form.columns.group\"),\n    rules: [{\n      required: true\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Search, {\n    placeholder: \"\\u30B0\\u30EB\\u30FC\\u30D7\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n    onSearch: showModal.bind(_this),\n    enterButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"upload\",\n    label: \"Upload\",\n    valuePropName: \"file\",\n    getValueFromEvent: normFile,\n    extra: \"longgggggggggggggggggggggggggggggggggg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Upload, {\n    name: \"logo\",\n    action: \"/upload.do\",\n    listType: \"picture\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }, \"Click to upload\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    wrapperCol: _objectSpread(_objectSpread({}, layout.wrapperCol), {}, {\n      offset: 8\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    htmlType: \"submit\",\n    style: {\n      background: \"#0050b3\",\n      borderColor: \"#0050b3\",\n      color: \"#ffffff\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, I18n.t(\"common.button.save\")), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginLeft: \"10px\",\n      background: \"#8c8c8c\",\n      borderColor: \"#8c8c8c\",\n      color: \"#ffffff\"\n    },\n    onClick: hanldeClear,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, I18n.t(\"common.button.clear\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"id\",\n    style: {\n      display: \"none\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"group_id\",\n    style: {\n      display: \"none\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Modal, {\n    title: \"\\u30B0\\u30EB\\u30FC\\u30D7\",\n    visible: isModalVisible //onOk={handleOk}\n    ,\n    onCancel: handleCancel // モーダルフォームのフッターにオーケーボタンを設定する。\n    ,\n    footer: [/*#__PURE__*/React.createElement(Button, {\n      style: {\n        background: \"#8c8c8c\",\n        borderColor: \"#8c8c8c\",\n        color: \"#ffffff\"\n      },\n      onClick: handleCancel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, I18n.t(\"common.button.cancle\"))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"\\u691C\\u7D22....\",\n    value: searchTerm,\n    onChange: function onChange(event) {\n      setSearchTerm(event.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    columns: columns,\n    dataSource: group.filter(function (value) {\n      var _value$group_name;\n\n      if (searchTerm == \"\") {\n        return value;\n      } else if ((_value$group_name = value.group_name) !== null && _value$group_name !== void 0 && _value$group_name.toLowerCase().includes(searchTerm === null || searchTerm === void 0 ? void 0 : searchTerm.toLowerCase())) {\n        return value;\n      }\n    }),\n    pagination: {\n      pageSize: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default EmployeeForm;","map":{"version":3,"sources":["E:/Rails/RailsOJT/outline-create-too-mdy_nodocker/app/javascript/components/employees/_employee_form.jsx"],"names":["React","useState","I18n","placeholder","moment","Form","Input","InputNumber","Button","Select","DatePicker","Modal","Radio","Table","Upload","message","string","Search","EmployeeForm","onFinish","role","formRef","validateMessages","group","hanldeClear","onFileUpload","layout","labelCol","span","wrapperCol","searchTerm","setSearchTerm","isModalVisible","setIsModalVisible","columns","dataIndex","key","render","record","onClick","id","group_name","normFile","e","console","log","target","name","file","value","gname","current","setFieldsValue","group_id","showModal","svalue","handleCancel","disabledDate","endOf","width","marginLeft","offset","color","fontSize","fontStyle","t","type","required","whitespace","max","min","resize","map","role_name","bind","background","borderColor","display","event","filter","toLowerCase","includes","pageSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport I18n, { placeholder } from \"i18n-js\";\r\nimport moment from \"moment\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  InputNumber,\r\n  Button,\r\n  Select,\r\n  DatePicker,\r\n  Modal,\r\n  Radio,\r\n  Table,\r\n  Upload,\r\n  message,\r\n} from \"antd\";\r\nimport { string } from \"prop-types\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst EmployeeForm = ({\r\n  onFinish,\r\n  role,\r\n  formRef,\r\n  validateMessages,\r\n  group,\r\n  hanldeClear,\r\n  onFileUpload,\r\n}) => {\r\n  const layout = {\r\n    labelCol: { span: 5 },\r\n    wrapperCol: { span: 13 },\r\n  };\r\n\r\n  // let formErrors = {};\r\n  // cname = (name) => {\r\n  //   //console.log(name);\r\n  //   formErrors = {};\r\n  //   if (!/^[a-zA-Z]+$/.test(name)) {\r\n  //     formErrors = \"Name is invalid.\";\r\n  //     //console.log(\"false\");\r\n  //   }\r\n  //   console.log(formErrors);\r\n  // };\r\n  //console.log(formErrors);\r\n\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  // 表示するテーブル列を設定する;\r\n  const columns = [\r\n    {\r\n      dataIndex: \"group_name\",\r\n      key: \"id\",\r\n      render: (dataIndex, record) => (\r\n        <a onClick={() => onClick(record.id, record.group_name)}>{dataIndex}</a>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const normFile = (e) => {\r\n    // console.log(\"Upload event:\", e);\r\n    console.log(\"Name : \" + e.target.name);\r\n    return e && e.file;\r\n  };\r\n\r\n  const onClick = (value, gname) => {\r\n    formRef.current?.setFieldsValue({\r\n      group_id: value,\r\n      group_name: gname,\r\n    });\r\n    // ModalBoxを閉める\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  // ModalBoxを呼ぶ\r\n  const showModal = (svalue) => {\r\n    setSearchTerm(svalue);\r\n    // ModalBoxを表示する\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  // Cancelボタンを押すとModalBoxを閉める\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  // 将来の日を選択できないように\r\n  const disabledDate = (current) => {\r\n    return current > moment().endOf(\"day\");\r\n  };\r\n  // const { studNameErr } = formErrors;\r\n  return (\r\n    <div>\r\n      <Form\r\n        style={{ width: \"60%\", marginLeft: \"200px\" }}\r\n        autoComplete=\"off\"\r\n        onFinish={onFinish}\r\n        ref={formRef}\r\n        {...layout}\r\n        name=\"nest-messages\"\r\n        validateMessages={validateMessages}\r\n      >\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 9 }}>\r\n          <label>\r\n            <span\r\n              style={{\r\n                color: \"#0050b3\",\r\n                fontSize: \"30px\",\r\n                fontStyle: \"italic\",\r\n              }}\r\n            >\r\n              社員情報\r\n            </span>\r\n          </label>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          name=\"name\"\r\n          label={I18n.t(\"employee.form.columns.name\")}\r\n          rules={[\r\n            { type: \"string\", required: true },\r\n            { whitespace: true },\r\n            { max: 10, message: I18n.t(\"message.M002\") },\r\n          ]}\r\n        >\r\n          <Input\r\n            allowClear\r\n            // onChange={(event) => {\r\n            //   cname(event.target.value);\r\n            // }}\r\n          />\r\n          {/* <div style={{ color: \"red\" }}>{formErrors}</div> */}\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"email\"\r\n          label={I18n.t(\"employee.form.columns.email\")}\r\n          rules={[{ type: \"email\", required: true }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"age\"\r\n          label={I18n.t(\"employee.form.columns.age\")}\r\n          rules={[{ type: \"number\", min: 0, max: 99, required: true }]}\r\n        >\r\n          <InputNumber style={{ width: \"100%\" }} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"address\"\r\n          label={I18n.t(\"employee.form.columns.address\")}\r\n          rules={[{ required: true }, { whitespace: true }, { max: 100 }]}\r\n        >\r\n          <Input.TextArea\r\n            style={{ resize: \"none\" }}\r\n            showCount\r\n            maxLength={100}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"birthday\"\r\n          label={I18n.t(\"employee.form.columns.birthday\")}\r\n          rules={[{ required: true }]}\r\n        >\r\n          <DatePicker\r\n            disabledDate={disabledDate}\r\n            placeholder=\"日付を選択してください\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"role_id\"\r\n          label={I18n.t(\"employee.form.columns.role\")}\r\n          rules={[{ required: true }]}\r\n        >\r\n          <Select placeholder=\"選択してください\">\r\n            {role.map((value) => (\r\n              <Select.Option value={value.key}>{value.role_name}</Select.Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"group_name\"\r\n          label={I18n.t(\"employee.form.columns.group\")}\r\n          rules={[{ required: true }]}\r\n        >\r\n          <Search\r\n            placeholder=\"グループを選択してください\"\r\n            onSearch={showModal.bind(this)}\r\n            enterButton\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"upload\"\r\n          label=\"Upload\"\r\n          valuePropName=\"file\"\r\n          getValueFromEvent={normFile}\r\n          extra=\"longgggggggggggggggggggggggggggggggggg\"\r\n        >\r\n          <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\r\n            <Button>Click to upload</Button>\r\n          </Upload>\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n          <Button\r\n            htmlType=\"submit\"\r\n            style={{\r\n              background: \"#0050b3\",\r\n              borderColor: \"#0050b3\",\r\n              color: \"#ffffff\",\r\n            }}\r\n          >\r\n            {I18n.t(\"common.button.save\")}\r\n          </Button>\r\n          <Button\r\n            style={{\r\n              marginLeft: \"10px\",\r\n              background: \"#8c8c8c\",\r\n              borderColor: \"#8c8c8c\",\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={hanldeClear}\r\n          >\r\n            {I18n.t(\"common.button.clear\")}\r\n          </Button>\r\n        </Form.Item>\r\n\r\n        <Form.Item name=\"id\" style={{ display: \"none\" }}>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"group_id\" style={{ display: \"none\" }}>\r\n          <Input />\r\n        </Form.Item>\r\n      </Form>\r\n      {/* グループのポップアップフォーム */}\r\n      <Modal\r\n        title=\"グループ\"\r\n        visible={isModalVisible}\r\n        //onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        // モーダルフォームのフッターにオーケーボタンを設定する。\r\n        footer={[\r\n          <Button\r\n            style={{\r\n              background: \"#8c8c8c\",\r\n              borderColor: \"#8c8c8c\",\r\n              color: \"#ffffff\",\r\n            }}\r\n            onClick={handleCancel}\r\n          >\r\n            {I18n.t(\"common.button.cancle\")}\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Input\r\n          placeholder=\"検索....\"\r\n          value={searchTerm}\r\n          onChange={(event) => {\r\n            setSearchTerm(event.target.value);\r\n          }}\r\n        />\r\n        <Table\r\n          columns={columns}\r\n          dataSource={group.filter((value) => {\r\n            if (searchTerm == \"\") {\r\n              return value;\r\n            } else if (\r\n              value.group_name\r\n                ?.toLowerCase()\r\n                .includes(searchTerm?.toLowerCase())\r\n            ) {\r\n              return value;\r\n            }\r\n          })}\r\n          pagination={{ pageSize: 4 }}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeForm;\r\n"]},"metadata":{},"sourceType":"module"}