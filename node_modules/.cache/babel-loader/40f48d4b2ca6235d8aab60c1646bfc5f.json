{"ast":null,"code":"var _jsxFileName = \"E:\\\\Rails\\\\RailsOJT\\\\outline-create-too-mdy_nodocker\\\\app\\\\javascript\\\\components\\\\employees\\\\_employee.jsx\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from \"react\";\nimport { Breadcrumb, Layout, message } from \"antd\";\nimport axios from \"axios\";\nimport I18n from \"i18n-js\";\nimport \"../../bundles/i18n/ja.js\";\nimport SideBar from \"../home/_sideBar\";\nimport EmployeeForm from \"./_employee_form.jsx\";\nimport EmployeeTable from \"./_employee_table.jsx\";\nimport { Input, Button, Space } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport validator from \"validator\";\nimport moment from \"moment\";\nimport * as wjcXlsx from \"@grapecity/wijmo.xlsx\";\nvar Content = Layout.Content;\n\nvar Employee = /*#__PURE__*/function (_React$Component) {\n  _inherits(Employee, _React$Component);\n\n  var _super = _createSuper(Employee);\n\n  // フォームのフィールドを空白にしたり、設定したりするため\n  function Employee(props) {\n    var _this;\n\n    _classCallCheck(this, Employee);\n\n    _this = _super.call(this, props);\n    _this.formRef = /*#__PURE__*/React.createRef();\n    _this.validateMessages = {\n      required: \"${label}を入力してください!\",\n      whitespace: \"${label}は空になっている\",\n      types: {\n        email: \"${label}のフォーマットが間違っている!\",\n        number: \"${label}のフォーマットが間違っている!\"\n      },\n      number: {\n        range: \"${label}は${min}から${max}の間で入力してください！\"\n      }\n    };\n\n    _this.cname = function (name) {\n      //console.log(name);\n      var formErrors = {};\n\n      if (!/^[a-zA-Z]+$/.test(name)) {\n        formErrors = \"Name is invalid.\"; //console.log(\"false\");\n      } //console.log(formErrors);\n\n    };\n\n    _this.onFinish = function (values) {\n      // rubyから取得したメッセージを表示するためにsms stateを呼ぶ\n      _this.setState({\n        sms: []\n      }); // 入力したname と　addressにスペースを消す\n\n\n      values.name = validator.trim(values.name);\n      values.address = validator.trim(values.address); // values.idがないと作成機能をする\n\n      if (values.id === undefined) {\n        axios.post(\"/api/v1/employee/create\", {\n          values: values\n        }).then(function (response) {\n          var _this$formRef$current;\n\n          _this.setState(function () {\n            return {\n              // rubyから取得したメッセージを表示する\n              sms: response.data.successSMS\n            };\n          });\n\n          message.success(_this.state.sms); // データを入力した後、フォームのフィールドを空白になるため\n\n          (_this$formRef$current = _this.formRef.current) === null || _this$formRef$current === void 0 ? void 0 : _this$formRef$current.resetFields(); // 入力したデータを、表示するため\n\n          _this.componentDidMount();\n        });\n      } else {\n        // 更新機能をする時、日付が1日が必要なので、もう1日追加する。\n        values.birthday = moment(values.birthday).add(1, \"days\"); // values.idがあると更新機能をする\n\n        axios.post(\"api/v1/employee/update/\".concat(values.id), {\n          values: values\n        }).then(function (response) {\n          if (response.data.errors) {\n            message.warning(response.data.errors);\n          } else {\n            var _this$formRef$current2;\n\n            // 更新した後、メッセージを表示する\n            message.success(I18n.t(\"employee.message.update_message\")); // データを入力した後、フォームのフィールドを空白になるため\n\n            (_this$formRef$current2 = _this.formRef.current) === null || _this$formRef$current2 === void 0 ? void 0 : _this$formRef$current2.resetFields();\n\n            _this.setState({\n              employee: _this.state.employee.filter(function (employee) {\n                return employee.key !== values.id;\n              })\n            });\n\n            var NE1 = {\n              key: response.data.employee.id,\n              id: response.data.employee.id,\n              name: response.data.employee.name,\n              email: response.data.employee.email,\n              age: response.data.employee.age,\n              role: response.data.role.role_name,\n              group: response.data.group.group_name,\n              birthday: response.data.employee.birthday,\n              address: response.data.employee.address,\n              role_id: response.data.employee.role_id,\n              group_id: response.data.employee.group_id,\n              role_name: response.data.role.role_name,\n              group_name: response.data.group.group_name\n            };\n\n            _this.setState(function (prevState) {\n              return {\n                employee: [].concat(_toConsumableArray(prevState.employee), [NE1])\n              };\n            });\n          }\n        });\n      }\n    };\n\n    _this.hanldeClear = function (values) {\n      var _this$formRef$current3;\n\n      (_this$formRef$current3 = _this.formRef.current) === null || _this$formRef$current3 === void 0 ? void 0 : _this$formRef$current3.resetFields();\n    };\n\n    _this.deleteEmp = function (id) {\n      axios[\"delete\"](\"api/v1/employee/\".concat(id)).then(function (data) {\n        if (data.data.errors) {\n          message.warning(data.data.errors);\n        } else {\n          var _this$formRef$current4;\n\n          message.success(I18n.t(\"employee.message.delete_message\")); // 削除したデータをemployee stateから消す\n\n          _this.setState({\n            employee: _this.state.employee.filter(function (employee) {\n              return employee.key !== id;\n            })\n          });\n\n          (_this$formRef$current4 = _this.formRef.current) === null || _this$formRef$current4 === void 0 ? void 0 : _this$formRef$current4.resetFields();\n        }\n      });\n    };\n\n    _this.onEdit = function (record) {\n      var _this$formRef$current5;\n\n      // formRefを呼んでフォームのフィールドにデータを設定する\n      (_this$formRef$current5 = _this.formRef.current) === null || _this$formRef$current5 === void 0 ? void 0 : _this$formRef$current5.setFieldsValue({\n        id: record.id,\n        name: record.name,\n        email: record.email,\n        age: record.age,\n        address: record.address,\n        role_id: record.role_id,\n        birthday: moment(record.birthday),\n        group_id: record.group_id,\n        group_name: record.group\n      });\n    };\n\n    _this.getColumnSearchProps = function (dataIndex, indexname) {\n      return {\n        filterDropdown: function filterDropdown(_ref) {\n          var setSelectedKeys = _ref.setSelectedKeys,\n              selectedKeys = _ref.selectedKeys,\n              confirm = _ref.confirm,\n              clearFilters = _ref.clearFilters;\n          return /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              padding: 8\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 7\n            }\n          }, /*#__PURE__*/React.createElement(Input, {\n            ref: function ref(node) {\n              _this.searchInput = node;\n            },\n            placeholder: \"\\u691C\\u7D22 \".concat(indexname),\n            value: selectedKeys[0],\n            onChange: function onChange(e) {\n              return setSelectedKeys(e.target.value ? [e.target.value] : []);\n            },\n            onPressEnter: function onPressEnter() {\n              return _this.handleSearch(selectedKeys, confirm, dataIndex);\n            },\n            style: {\n              marginBottom: 8,\n              display: \"block\"\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 9\n            }\n          }), /*#__PURE__*/React.createElement(Space, {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 9\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            type: \"primary\",\n            onClick: function onClick() {\n              return _this.handleSearch(selectedKeys, confirm, dataIndex);\n            },\n            icon: /*#__PURE__*/React.createElement(SearchOutlined, {\n              __self: _assertThisInitialized(_this),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }\n            }),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 11\n            }\n          }, I18n.t(\"employee.filter.table.search\")), /*#__PURE__*/React.createElement(Button, {\n            onClick: function onClick() {\n              return _this.handleReset(clearFilters);\n            },\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 11\n            }\n          }, I18n.t(\"employee.filter.table.reset\")), /*#__PURE__*/React.createElement(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: function onClick() {\n              confirm({\n                closeDropdown: false\n              });\n\n              _this.setState({\n                searchText: selectedKeys[0],\n                searchedColumn: dataIndex\n              });\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 11\n            }\n          }, I18n.t(\"employee.filter.table.filter\"))));\n        },\n        filterIcon: function filterIcon(filtered) {\n          return /*#__PURE__*/React.createElement(SearchOutlined, {\n            style: {\n              color: filtered ? \"#1890ff\" : undefined\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 7\n            }\n          });\n        },\n        onFilter: function onFilter(value, record) {\n          return record[dataIndex] ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) : \"\";\n        },\n        onFilterDropdownVisibleChange: function onFilterDropdownVisibleChange(visible) {\n          if (visible) {\n            setTimeout(function () {\n              return _this.searchInput.select();\n            }, 100);\n          }\n        },\n        render: function render(text) {\n          return _this.state.searchedColumn === dataIndex ? /*#__PURE__*/React.createElement(Highlighter, {\n            highlightStyle: {\n              backgroundColor: \"#ffc069\",\n              padding: 0\n            },\n            searchWords: [_this.state.searchText],\n            autoEscape: true,\n            textToHighlight: text ? text.toString() : \"\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 9\n            }\n          }) : text;\n        }\n      };\n    };\n\n    _this.handleSearch = function (selectedKeys, confirm, dataIndex) {\n      confirm();\n\n      _this.setState({\n        searchText: selectedKeys[0],\n        searchedColumn: dataIndex\n      });\n    };\n\n    _this.handleReset = function (clearFilters) {\n      clearFilters();\n\n      _this.setState({\n        searchText: \"\"\n      });\n    };\n\n    _this.state = {\n      employee: [],\n      findEmp: [],\n      group: [],\n      role: [],\n      sms: [],\n      formErrors: {}\n    }; // Excel出力するため\n\n    _this.save = _this.save.bind(_assertThisInitialized(_this)); // Excel出力するため\n\n    _this.exportReport = _this.exportReport.bind(_assertThisInitialized(_this));\n    return _this;\n  } // フォームフィールドのチェックする\n\n\n  _createClass(Employee, [{\n    key: \"componentDidMount\",\n    value: // Initialize =>　dbから社員データを取得　=>　社員データを設定する\n    //        =>　dbからグループデータを取得 =>　グループデータを設定する\n    //        =>　dbからロールデータを取得 =>　ロールデータを設定する\n    function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        employee: [],\n        group: [],\n        role: []\n      });\n      axios.get(\"api/v1/employee.json\").then(function (response) {\n        response.data.role.forEach(function (k) {\n          var newG1 = {\n            key: k.id,\n            id: k.id,\n            role_name: k.role_name\n          }; // ロールデータをrole stateに設定する\n\n          _this2.setState(function (prevState) {\n            return {\n              role: [].concat(_toConsumableArray(prevState.role), [newG1])\n            };\n          });\n        });\n        response.data.group.forEach(function (j) {\n          var newG1 = {\n            key: j.id,\n            id: j.id,\n            group_name: j.group_name\n          }; // グループデータをgroup stateに設定する\n\n          _this2.setState(function (prevState) {\n            return {\n              group: [].concat(_toConsumableArray(prevState.group), [newG1])\n            };\n          });\n        });\n        response.data.employees.forEach(function (i) {\n          var newE1 = {\n            key: i.id,\n            id: i.id,\n            name: i.name,\n            email: i.email,\n            age: i.age,\n            role: i.role_name,\n            group: i.group_name,\n            birthday: i.birthday,\n            address: i.address,\n            role_id: i.role_id,\n            group_id: i.group_id,\n            role_name: i.role_name,\n            group_name: i.group_name\n          }; // 社員データをemployee stateに設定する\n\n          _this2.setState(function (prevState) {\n            return {\n              employee: [].concat(_toConsumableArray(prevState.employee), [newE1])\n            };\n          });\n        });\n      })[\"catch\"](function (err) {\n        return message.error(\"Error: \" + err);\n      });\n    } // 作成と更新のため　=>　ルートに移動\n\n  }, {\n    key: \"save\",\n    value: // Excel出力するため\n    function save() {\n      var workbook = this.exportReport(this.state.employee); // Excel出力した後、ファイル名を設定する\n\n      var today = new Date(),\n          date = today.getFullYear() + \"-\" + (today.getMonth() + 1) + \"-\" + today.getDate() + \"-\" + today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds(); // EmployeeDataReportという名前でExcel出力する\n\n      workbook.saveAsync(\"EmployeeDataReport\" + date + \".xlsx\");\n    } // Employeeデータを取得する\n\n  }, {\n    key: \"exportReport\",\n    value: function exportReport(employee) {\n      var book = new wjcXlsx.Workbook();\n      var stdNumWidth = 85,\n          tableHeaderStyle = new wjcXlsx.WorkbookStyle(),\n          tableValueStyle = new wjcXlsx.WorkbookStyle(),\n          tableDateStyle = new wjcXlsx.WorkbookStyle();\n      tableHeaderStyle.font = new wjcXlsx.WorkbookFont();\n      tableHeaderStyle.font.bold = true;\n      tableHeaderStyle.fill = new wjcXlsx.WorkbookFill();\n      tableHeaderStyle.fill.color = \"#fad9cd\";\n      tableValueStyle.fill = new wjcXlsx.WorkbookFill();\n      tableValueStyle.fill.color = \"#f4b19b\";\n      var sheet = new wjcXlsx.WorkSheet(),\n          rows = sheet.rows;\n      book.sheets.push(sheet);\n      sheet.name = \"社員情報\";\n      sheet.columns[0] = new wjcXlsx.WorkbookColumn();\n      sheet.columns[0].width = \"1ch\";\n      sheet.columns[1] = new wjcXlsx.WorkbookColumn();\n      sheet.columns[1].width = 100;\n      sheet.columns[2] = new wjcXlsx.WorkbookColumn();\n      sheet.columns[2].width = stdNumWidth;\n      sheet.columns[3] = new wjcXlsx.WorkbookColumn();\n      sheet.columns[3].width = 200;\n      sheet.columns[4] = new wjcXlsx.WorkbookColumn();\n      sheet.columns[4].width = stdNumWidth;\n      sheet.columns[6] = new wjcXlsx.WorkbookColumn();\n      sheet.columns[6].width = 120;\n      sheet.columns[6] = new wjcXlsx.WorkbookColumn();\n      sheet.columns[6].width = stdNumWidth;\n      sheet.columns[7] = new wjcXlsx.WorkbookColumn();\n      sheet.columns[7].width = stdNumWidth;\n      sheet.columns[8] = new wjcXlsx.WorkbookColumn();\n      sheet.columns[8].width = 130; //============= Excel ヘッダ - Employee データ =========================\n\n      rows[0] = new wjcXlsx.WorkbookRow();\n      rows[0].cells[1] = new wjcXlsx.WorkbookCell();\n      rows[0].cells[1].colSpan = 2;\n      rows[0].cells[1].value = \"社員情報\";\n      rows[0].cells[1].style = new wjcXlsx.WorkbookStyle();\n      rows[0].cells[1].style.font = new wjcXlsx.WorkbookFont();\n      rows[0].cells[1].style.font.size = 30;\n      rows[2] = new wjcXlsx.WorkbookRow();\n      rows[2].style = new wjcXlsx.WorkbookStyle();\n      rows[2].style.hAlign = wjcXlsx.HAlign.Center;\n      rows[2].cells[1] = new wjcXlsx.WorkbookCell();\n      rows[2].cells[1].value = \"名前\";\n      rows[2].cells[2] = new wjcXlsx.WorkbookCell();\n      rows[2].cells[2].value = \"年齢\";\n      rows[2].cells[3] = new wjcXlsx.WorkbookCell();\n      rows[2].cells[3].value = \"メール\";\n      rows[2].cells[4] = new wjcXlsx.WorkbookCell();\n      rows[2].cells[4].value = \"住所\";\n      rows[2].cells[5] = new wjcXlsx.WorkbookCell();\n      rows[2].cells[5].value = \"誕生日\";\n      rows[2].cells[6] = new wjcXlsx.WorkbookCell();\n      rows[2].cells[6].value = \"ロール\";\n      rows[2].cells[7] = new wjcXlsx.WorkbookCell();\n      rows[2].cells[7].value = \"グループ\"; // Employee データ\n\n      var firstIdx = 3;\n\n      for (var i = 0; i < employee.length; i++) {\n        var curEmployee = employee[i],\n            rowIdx = firstIdx + i;\n        rows[rowIdx] = new wjcXlsx.WorkbookRow();\n        rows[rowIdx].cells[1] = new wjcXlsx.WorkbookCell();\n        rows[rowIdx].cells[1].value = curEmployee.name;\n        rows[rowIdx].cells[2] = new wjcXlsx.WorkbookCell();\n        rows[rowIdx].cells[2].value = curEmployee.age;\n        rows[rowIdx].cells[3] = new wjcXlsx.WorkbookCell();\n        rows[rowIdx].cells[3].value = curEmployee.email;\n        rows[rowIdx].cells[4] = new wjcXlsx.WorkbookCell();\n        rows[rowIdx].cells[4].value = curEmployee.address;\n        rows[rowIdx].cells[5] = new wjcXlsx.WorkbookCell();\n        rows[rowIdx].cells[5].value = curEmployee.birthday;\n        rows[rowIdx].cells[6] = new wjcXlsx.WorkbookCell();\n        rows[rowIdx].cells[6].value = curEmployee.role_name;\n        rows[rowIdx].cells[7] = new wjcXlsx.WorkbookCell();\n        rows[rowIdx].cells[7].value = curEmployee.group_name;\n      }\n\n      return book;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Layout, {\n        style: {\n          minHeight: \"100vh\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SideBar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Layout, {\n        className: \"site-layout\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Content, {\n        style: {\n          margin: \"0 16px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb, {\n        style: {\n          margin: \"16px 0\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 15\n        }\n      }, I18n.t(\"home.home\")), /*#__PURE__*/React.createElement(Breadcrumb.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 15\n        }\n      }, I18n.t(\"home.menu1.side2\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"site-layout-background\",\n        style: {\n          padding: 24,\n          minHeight: 360\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(EmployeeForm // _作成・更新機能をするため\n      , {\n        onFinish: this.onFinish // フォームのフィールドを空白にしたり、設定したりするため\n        ,\n        formRef: this.formRef // _employee_formのselect boxにグループデータを設定するため\n        ,\n        group: this.state.group // _employee_formのselect boxにロールデータを設定するため\n        ,\n        role: this.state.role // 入力したデータをチェックするため\n        ,\n        validateMessages: this.validateMessages,\n        hanldeClear: this.hanldeClear,\n        cname: this.cname,\n        formErrors: this.formErrors,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(EmployeeTable // _employee_tableに社員情報を表示するため\n      , {\n        employee: this.state.employee // _employee_tableの社員データを削除するため\n        ,\n        deleteEmp: this.deleteEmp // _employee_tableの社員データを更新するため\n        ,\n        onEdit: this.onEdit // フィルター => 検索\n        ,\n        getColumnSearchProps: this.getColumnSearchProps // Excel fileを出力するため\n        ,\n        excelExport: this.save,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return Employee;\n}(React.Component);\n\nexport default Employee;","map":{"version":3,"sources":["E:/Rails/RailsOJT/outline-create-too-mdy_nodocker/app/javascript/components/employees/_employee.jsx"],"names":["React","Breadcrumb","Layout","message","axios","I18n","SideBar","EmployeeForm","EmployeeTable","Input","Button","Space","Highlighter","SearchOutlined","validator","moment","wjcXlsx","Content","Employee","props","formRef","createRef","validateMessages","required","whitespace","types","email","number","range","cname","name","formErrors","test","onFinish","values","setState","sms","trim","address","id","undefined","post","then","response","data","successSMS","success","state","current","resetFields","componentDidMount","birthday","add","errors","warning","t","employee","filter","key","NE1","age","role","role_name","group","group_name","role_id","group_id","prevState","hanldeClear","deleteEmp","onEdit","record","setFieldsValue","getColumnSearchProps","dataIndex","indexname","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","node","searchInput","e","target","value","handleSearch","marginBottom","display","width","handleReset","closeDropdown","searchText","searchedColumn","filterIcon","filtered","color","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","backgroundColor","findEmp","save","bind","exportReport","get","forEach","k","newG1","j","employees","i","newE1","err","error","workbook","today","Date","date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","saveAsync","book","Workbook","stdNumWidth","tableHeaderStyle","WorkbookStyle","tableValueStyle","tableDateStyle","font","WorkbookFont","bold","fill","WorkbookFill","sheet","WorkSheet","rows","sheets","push","columns","WorkbookColumn","WorkbookRow","cells","WorkbookCell","colSpan","style","size","hAlign","HAlign","Center","firstIdx","length","curEmployee","rowIdx","minHeight","margin","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Breadcrumb, Layout, message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport I18n from \"i18n-js\";\r\nimport \"../../bundles/i18n/ja.js\";\r\nimport SideBar from \"../home/_sideBar\";\r\nimport EmployeeForm from \"./_employee_form.jsx\";\r\nimport EmployeeTable from \"./_employee_table.jsx\";\r\nimport { Input, Button, Space } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport validator from \"validator\";\r\nimport moment from \"moment\";\r\nimport * as wjcXlsx from \"@grapecity/wijmo.xlsx\";\r\n\r\nconst { Content } = Layout;\r\n\r\nclass Employee extends React.Component {\r\n  // フォームのフィールドを空白にしたり、設定したりするため\r\n  formRef = React.createRef();\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      employee: [],\r\n      findEmp: [],\r\n      group: [],\r\n      role: [],\r\n      sms: [],\r\n      formErrors: {},\r\n    };\r\n\r\n    // Excel出力するため\r\n    this.save = this.save.bind(this);\r\n\r\n    // Excel出力するため\r\n    this.exportReport = this.exportReport.bind(this);\r\n  }\r\n\r\n  // フォームフィールドのチェックする\r\n  validateMessages = {\r\n    required: \"${label}を入力してください!\",\r\n    whitespace: \"${label}は空になっている\",\r\n    types: {\r\n      email: \"${label}のフォーマットが間違っている!\",\r\n      number: \"${label}のフォーマットが間違っている!\",\r\n    },\r\n    number: {\r\n      range: \"${label}は${min}から${max}の間で入力してください！\",\r\n    },\r\n  };\r\n\r\n  cname = (name) => {\r\n    //console.log(name);\r\n    let formErrors = {};\r\n    if (!/^[a-zA-Z]+$/.test(name)) {\r\n      formErrors = \"Name is invalid.\";\r\n      //console.log(\"false\");\r\n    }\r\n    //console.log(formErrors);\r\n  };\r\n\r\n  // Initialize =>　dbから社員データを取得　=>　社員データを設定する\r\n  //        =>　dbからグループデータを取得 =>　グループデータを設定する\r\n  //        =>　dbからロールデータを取得 =>　ロールデータを設定する\r\n  componentDidMount() {\r\n    this.setState({\r\n      employee: [],\r\n      group: [],\r\n      role: [],\r\n    });\r\n    axios\r\n      .get(\"api/v1/employee.json\")\r\n      .then((response) => {\r\n        response.data.role.forEach((k) => {\r\n          const newG1 = {\r\n            key: k.id,\r\n            id: k.id,\r\n            role_name: k.role_name,\r\n          };\r\n          // ロールデータをrole stateに設定する\r\n          this.setState((prevState) => ({\r\n            role: [...prevState.role, newG1],\r\n          }));\r\n        });\r\n\r\n        response.data.group.forEach((j) => {\r\n          const newG1 = {\r\n            key: j.id,\r\n            id: j.id,\r\n            group_name: j.group_name,\r\n          };\r\n          // グループデータをgroup stateに設定する\r\n          this.setState((prevState) => ({\r\n            group: [...prevState.group, newG1],\r\n          }));\r\n        });\r\n\r\n        response.data.employees.forEach((i) => {\r\n          const newE1 = {\r\n            key: i.id,\r\n            id: i.id,\r\n            name: i.name,\r\n            email: i.email,\r\n            age: i.age,\r\n            role: i.role_name,\r\n            group: i.group_name,\r\n            birthday: i.birthday,\r\n            address: i.address,\r\n            role_id: i.role_id,\r\n            group_id: i.group_id,\r\n            role_name: i.role_name,\r\n            group_name: i.group_name,\r\n          };\r\n          // 社員データをemployee stateに設定する\r\n          this.setState((prevState) => ({\r\n            employee: [...prevState.employee, newE1],\r\n          }));\r\n        });\r\n      })\r\n\r\n      .catch((err) => message.error(\"Error: \" + err));\r\n  }\r\n\r\n  // 作成と更新のため　=>　ルートに移動\r\n  onFinish = (values) => {\r\n    // rubyから取得したメッセージを表示するためにsms stateを呼ぶ\r\n    this.setState({\r\n      sms: [],\r\n    });\r\n\r\n    // 入力したname と　addressにスペースを消す\r\n    values.name = validator.trim(values.name);\r\n    values.address = validator.trim(values.address);\r\n\r\n    // values.idがないと作成機能をする\r\n    if (values.id === undefined) {\r\n      axios.post(\"/api/v1/employee/create\", { values }).then((response) => {\r\n        this.setState(() => ({\r\n          // rubyから取得したメッセージを表示する\r\n          sms: response.data.successSMS,\r\n        }));\r\n        message.success(this.state.sms);\r\n\r\n        // データを入力した後、フォームのフィールドを空白になるため\r\n        this.formRef.current?.resetFields();\r\n\r\n        // 入力したデータを、表示するため\r\n        this.componentDidMount();\r\n      });\r\n    } else {\r\n      // 更新機能をする時、日付が1日が必要なので、もう1日追加する。\r\n      values.birthday = moment(values.birthday).add(1, \"days\");\r\n\r\n      // values.idがあると更新機能をする\r\n      axios\r\n        .post(`api/v1/employee/update/${values.id}`, { values })\r\n        .then((response) => {\r\n          if (response.data.errors) {\r\n            message.warning(response.data.errors);\r\n          } else {\r\n            // 更新した後、メッセージを表示する\r\n            message.success(I18n.t(\"employee.message.update_message\"));\r\n\r\n            // データを入力した後、フォームのフィールドを空白になるため\r\n            this.formRef.current?.resetFields();\r\n\r\n            this.setState({\r\n              employee: this.state.employee.filter(\r\n                (employee) => employee.key !== values.id\r\n              ),\r\n            });\r\n            const NE1 = {\r\n              key: response.data.employee.id,\r\n              id: response.data.employee.id,\r\n              name: response.data.employee.name,\r\n              email: response.data.employee.email,\r\n              age: response.data.employee.age,\r\n              role: response.data.role.role_name,\r\n              group: response.data.group.group_name,\r\n              birthday: response.data.employee.birthday,\r\n              address: response.data.employee.address,\r\n              role_id: response.data.employee.role_id,\r\n              group_id: response.data.employee.group_id,\r\n              role_name: response.data.role.role_name,\r\n              group_name: response.data.group.group_name,\r\n            };\r\n\r\n            this.setState((prevState) => ({\r\n              employee: [...prevState.employee, NE1],\r\n            }));\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  hanldeClear = (values) => {\r\n    this.formRef.current?.resetFields();\r\n  };\r\n\r\n  // 従業員削除　=>　ルートに移動\r\n  deleteEmp = (id) => {\r\n    axios.delete(`api/v1/employee/${id}`).then((data) => {\r\n      if (data.data.errors) {\r\n        message.warning(data.data.errors);\r\n      } else {\r\n        message.success(I18n.t(\"employee.message.delete_message\"));\r\n\r\n        // 削除したデータをemployee stateから消す\r\n        this.setState({\r\n          employee: this.state.employee.filter(\r\n            (employee) => employee.key !== id\r\n          ),\r\n        });\r\n        this.formRef.current?.resetFields();\r\n      }\r\n    });\r\n  };\r\n\r\n  // テーブル内の従業員の更新=>レコードデータを取得\r\n  onEdit = (record) => {\r\n    // formRefを呼んでフォームのフィールドにデータを設定する\r\n    this.formRef.current?.setFieldsValue({\r\n      id: record.id,\r\n      name: record.name,\r\n      email: record.email,\r\n      age: record.age,\r\n      address: record.address,\r\n      role_id: record.role_id,\r\n      birthday: moment(record.birthday),\r\n      group_id: record.group_id,\r\n      group_name: record.group,\r\n    });\r\n  };\r\n\r\n  // フィルター\r\n  getColumnSearchProps = (dataIndex, indexname) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`検索 ${indexname}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            {I18n.t(\"employee.filter.table.search\")}\r\n          </Button>\r\n          <Button\r\n            onClick={() => this.handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            {I18n.t(\"employee.filter.table.reset\")}\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            {I18n.t(\"employee.filter.table.filter\")}\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  // フィルター検索\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  // フィルターリセット\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  // Excel出力するため\r\n  save() {\r\n    const workbook = this.exportReport(this.state.employee);\r\n\r\n    // Excel出力した後、ファイル名を設定する\r\n    var today = new Date(),\r\n      date =\r\n        today.getFullYear() +\r\n        \"-\" +\r\n        (today.getMonth() + 1) +\r\n        \"-\" +\r\n        today.getDate() +\r\n        \"-\" +\r\n        today.getHours() +\r\n        \":\" +\r\n        today.getMinutes() +\r\n        \":\" +\r\n        today.getSeconds();\r\n\r\n    // EmployeeDataReportという名前でExcel出力する\r\n    workbook.saveAsync(\"EmployeeDataReport\" + date + \".xlsx\");\r\n  }\r\n\r\n  // Employeeデータを取得する\r\n  exportReport(employee) {\r\n    var book = new wjcXlsx.Workbook();\r\n\r\n    var stdNumWidth = 85,\r\n      tableHeaderStyle = new wjcXlsx.WorkbookStyle(),\r\n      tableValueStyle = new wjcXlsx.WorkbookStyle(),\r\n      tableDateStyle = new wjcXlsx.WorkbookStyle();\r\n\r\n    tableHeaderStyle.font = new wjcXlsx.WorkbookFont();\r\n    tableHeaderStyle.font.bold = true;\r\n    tableHeaderStyle.fill = new wjcXlsx.WorkbookFill();\r\n    tableHeaderStyle.fill.color = \"#fad9cd\";\r\n    tableValueStyle.fill = new wjcXlsx.WorkbookFill();\r\n    tableValueStyle.fill.color = \"#f4b19b\";\r\n\r\n    var sheet = new wjcXlsx.WorkSheet(),\r\n      rows = sheet.rows;\r\n\r\n    book.sheets.push(sheet);\r\n    sheet.name = \"社員情報\";\r\n\r\n    sheet.columns[0] = new wjcXlsx.WorkbookColumn();\r\n    sheet.columns[0].width = \"1ch\";\r\n    sheet.columns[1] = new wjcXlsx.WorkbookColumn();\r\n    sheet.columns[1].width = 100;\r\n    sheet.columns[2] = new wjcXlsx.WorkbookColumn();\r\n    sheet.columns[2].width = stdNumWidth;\r\n    sheet.columns[3] = new wjcXlsx.WorkbookColumn();\r\n    sheet.columns[3].width = 200;\r\n    sheet.columns[4] = new wjcXlsx.WorkbookColumn();\r\n    sheet.columns[4].width = stdNumWidth;\r\n    sheet.columns[6] = new wjcXlsx.WorkbookColumn();\r\n    sheet.columns[6].width = 120;\r\n    sheet.columns[6] = new wjcXlsx.WorkbookColumn();\r\n    sheet.columns[6].width = stdNumWidth;\r\n    sheet.columns[7] = new wjcXlsx.WorkbookColumn();\r\n    sheet.columns[7].width = stdNumWidth;\r\n    sheet.columns[8] = new wjcXlsx.WorkbookColumn();\r\n    sheet.columns[8].width = 130;\r\n\r\n    //============= Excel ヘッダ - Employee データ =========================\r\n    rows[0] = new wjcXlsx.WorkbookRow();\r\n    rows[0].cells[1] = new wjcXlsx.WorkbookCell();\r\n    rows[0].cells[1].colSpan = 2;\r\n    rows[0].cells[1].value = \"社員情報\";\r\n    rows[0].cells[1].style = new wjcXlsx.WorkbookStyle();\r\n\r\n    rows[0].cells[1].style.font = new wjcXlsx.WorkbookFont();\r\n    rows[0].cells[1].style.font.size = 30;\r\n\r\n    rows[2] = new wjcXlsx.WorkbookRow();\r\n    rows[2].style = new wjcXlsx.WorkbookStyle();\r\n    rows[2].style.hAlign = wjcXlsx.HAlign.Center;\r\n    rows[2].cells[1] = new wjcXlsx.WorkbookCell();\r\n    rows[2].cells[1].value = \"名前\";\r\n\r\n    rows[2].cells[2] = new wjcXlsx.WorkbookCell();\r\n    rows[2].cells[2].value = \"年齢\";\r\n\r\n    rows[2].cells[3] = new wjcXlsx.WorkbookCell();\r\n    rows[2].cells[3].value = \"メール\";\r\n\r\n    rows[2].cells[4] = new wjcXlsx.WorkbookCell();\r\n    rows[2].cells[4].value = \"住所\";\r\n\r\n    rows[2].cells[5] = new wjcXlsx.WorkbookCell();\r\n    rows[2].cells[5].value = \"誕生日\";\r\n\r\n    rows[2].cells[6] = new wjcXlsx.WorkbookCell();\r\n    rows[2].cells[6].value = \"ロール\";\r\n\r\n    rows[2].cells[7] = new wjcXlsx.WorkbookCell();\r\n    rows[2].cells[7].value = \"グループ\";\r\n\r\n    // Employee データ\r\n    var firstIdx = 3;\r\n\r\n    for (var i = 0; i < employee.length; i++) {\r\n      var curEmployee = employee[i],\r\n        rowIdx = firstIdx + i;\r\n      rows[rowIdx] = new wjcXlsx.WorkbookRow();\r\n      rows[rowIdx].cells[1] = new wjcXlsx.WorkbookCell();\r\n      rows[rowIdx].cells[1].value = curEmployee.name;\r\n\r\n      rows[rowIdx].cells[2] = new wjcXlsx.WorkbookCell();\r\n      rows[rowIdx].cells[2].value = curEmployee.age;\r\n\r\n      rows[rowIdx].cells[3] = new wjcXlsx.WorkbookCell();\r\n      rows[rowIdx].cells[3].value = curEmployee.email;\r\n\r\n      rows[rowIdx].cells[4] = new wjcXlsx.WorkbookCell();\r\n      rows[rowIdx].cells[4].value = curEmployee.address;\r\n\r\n      rows[rowIdx].cells[5] = new wjcXlsx.WorkbookCell();\r\n      rows[rowIdx].cells[5].value = curEmployee.birthday;\r\n\r\n      rows[rowIdx].cells[6] = new wjcXlsx.WorkbookCell();\r\n      rows[rowIdx].cells[6].value = curEmployee.role_name;\r\n\r\n      rows[rowIdx].cells[7] = new wjcXlsx.WorkbookCell();\r\n      rows[rowIdx].cells[7].value = curEmployee.group_name;\r\n    }\r\n\r\n    return book;\r\n  }\r\n  render() {\r\n    return (\r\n      <Layout style={{ minHeight: \"100vh\" }}>\r\n        <SideBar />\r\n        <Layout className=\"site-layout\">\r\n          <Content style={{ margin: \"0 16px\" }}>\r\n            <Breadcrumb style={{ margin: \"16px 0\" }}>\r\n              <Breadcrumb.Item>{I18n.t(\"home.home\")}</Breadcrumb.Item>\r\n              <Breadcrumb.Item>{I18n.t(\"home.menu1.side2\")}</Breadcrumb.Item>\r\n            </Breadcrumb>\r\n            <div\r\n              className=\"site-layout-background\"\r\n              style={{ padding: 24, minHeight: 360 }}\r\n            >\r\n              {/*  _employee_formを呼ぶ */}\r\n              <EmployeeForm\r\n                // _作成・更新機能をするため\r\n                onFinish={this.onFinish}\r\n                // フォームのフィールドを空白にしたり、設定したりするため\r\n                formRef={this.formRef}\r\n                // _employee_formのselect boxにグループデータを設定するため\r\n                group={this.state.group}\r\n                // _employee_formのselect boxにロールデータを設定するため\r\n                role={this.state.role}\r\n                // 入力したデータをチェックするため\r\n                validateMessages={this.validateMessages}\r\n                hanldeClear={this.hanldeClear}\r\n                cname={this.cname}\r\n                formErrors={this.formErrors}\r\n              />\r\n\r\n              {/*  _employee_tableを呼ぶ */}\r\n              <EmployeeTable\r\n                // _employee_tableに社員情報を表示するため\r\n                employee={this.state.employee}\r\n                // _employee_tableの社員データを削除するため\r\n                deleteEmp={this.deleteEmp}\r\n                // _employee_tableの社員データを更新するため\r\n                onEdit={this.onEdit}\r\n                // フィルター => 検索\r\n                getColumnSearchProps={this.getColumnSearchProps}\r\n                // Excel fileを出力するため\r\n                excelExport={this.save}\r\n              />\r\n            </div>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Employee;\r\n"]},"metadata":{},"sourceType":"module"}